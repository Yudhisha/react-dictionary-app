{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/admin/Desktop/RN/word-hunt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/admin/Desktop/RN/word-hunt/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\admin\\\\Desktop\\\\RN\\\\word-hunt\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import'./App.css';import axios from'axios';import{useEffect,useState}from'react';import Container from'@mui/material/Container';import Header from'./components/Header/Header';import Definitions from'./components/Definitions/Definitions';import{alpha,styled}from'@mui/material/styles';import{grey}from'@mui/material/colors';import Switch from'@mui/material/Switch';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),meanings=_useState4[0],setMeanings=_useState4[1];var _useState5=useState(\"en\"),_useState6=_slicedToArray(_useState5,2),category=_useState6[0],setCategory=_useState6[1];var _useState7=useState(\"false\"),_useState8=_slicedToArray(_useState7,2),LightMode=_useState8[0],setLightMode=_useState8[1];var DarkMode=styled(Switch)(function(_ref){var theme=_ref.theme;return{'& .MuiSwitch-switchBase.Mui-checked':{color:grey[600],'&:hover':{backgroundColor:alpha(grey[600],theme.palette.action.hoverOpacity)}},'& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track':{backgroundColor:grey[600]}};});var label={inputProps:{'aria-label':'Switch demo'}};var fetchDictionaryAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://api.dictionaryapi.dev/api/v2/entries/\".concat(category,\"/\").concat(word));case 3:data=_context.sent;setMeanings(data.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchDictionaryAPI(){return _ref2.apply(this,arguments);};}();useEffect(function(){fetchDictionaryAPI();},[word,category]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",style:{height:\"100vh\",backgroundColor:LightMode?\"#fff\":\"#282c34\",color:LightMode?\"black\":\"white\",transition:\"all 0.5s linear\"},children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",style:{display:\"flex\",flexDirection:\"column\",height:\"100vh\",justifyContent:\"space-evenly\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:0,right:15,paddingTop:10},children:[/*#__PURE__*/_jsxs(\"span\",{children:[LightMode?\"Light\":\"Dark\",\" Mode\"]}),/*#__PURE__*/_jsx(DarkMode,{checked:LightMode,onChange:function onChange(){return setLightMode(!LightMode);}})]}),/*#__PURE__*/_jsx(Header,{category:category,setCategory:setCategory,word:word,setWord:setWord,LightMode:LightMode}),meanings&&/*#__PURE__*/_jsx(Definitions,{word:word,meanings:meanings,category:category,LightMode:LightMode})]})});}export default App;","map":{"version":3,"sources":["C:/Users/admin/Desktop/RN/word-hunt/src/App.js"],"names":["axios","useEffect","useState","Container","Header","Definitions","alpha","styled","grey","Switch","App","word","setWord","meanings","setMeanings","category","setCategory","LightMode","setLightMode","DarkMode","theme","color","backgroundColor","palette","action","hoverOpacity","label","inputProps","fetchDictionaryAPI","get","data","console","log","height","transition","display","flexDirection","justifyContent","position","top","right","paddingTop"],"mappings":"wXAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,sBAA9B,CACA,OAASC,IAAT,KAAqB,sBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBR,QAAQ,CAAC,EAAD,CAAhC,wCAAOS,IAAP,eAAaC,OAAb,eACA,eAAgCV,QAAQ,CAAC,EAAD,CAAxC,yCAAOW,QAAP,eAAiBC,WAAjB,eACA,eAAgCZ,QAAQ,CAAC,IAAD,CAAxC,yCAAOa,QAAP,eAAiBC,WAAjB,eACA,eAAkCd,QAAQ,CAAC,OAAD,CAA1C,yCAAOe,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,QAAQ,CAAGZ,MAAM,CAACE,MAAD,CAAN,CAAe,kBAAGW,CAAAA,KAAH,MAAGA,KAAH,OAAgB,CAC9C,sCAAuC,CACrCC,KAAK,CAAEb,IAAI,CAAC,GAAD,CAD0B,CAErC,UAAW,CACTc,eAAe,CAAEhB,KAAK,CAACE,IAAI,CAAC,GAAD,CAAL,CAAYY,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,YAAjC,CADb,CAF0B,CADO,CAO9C,yDAA0D,CACxDH,eAAe,CAAEd,IAAI,CAAC,GAAD,CADmC,CAPZ,CAAhB,EAAf,CAAjB,CAYA,GAAMkB,CAAAA,KAAK,CAAG,CAAEC,UAAU,CAAE,CAAE,aAAc,aAAhB,CAAd,CAAd,CAEA,GAAMC,CAAAA,kBAAkB,2FAAG,kLAEJ5B,CAAAA,KAAK,CAAC6B,GAAN,wDAA0Dd,QAA1D,aAAsEJ,IAAtE,EAFI,QAEjBmB,IAFiB,eAGvBhB,WAAW,CAACgB,IAAI,CAACA,IAAN,CAAX,CAHuB,+EAKvBC,OAAO,CAACC,GAAR,cALuB,oEAAH,kBAAlBJ,CAAAA,kBAAkB,2CAAxB,CAUA3B,SAAS,CAAC,UAAM,CACd2B,kBAAkB,GACnB,CAFQ,CAEN,CAACjB,IAAD,CAAMI,QAAN,CAFM,CAAT,CAIA,mBACE,YAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAE,CAACkB,MAAM,CAAC,OAAR,CAAiBX,eAAe,CAAEL,SAAS,CAAG,MAAH,CAAY,SAAvD,CAAkEI,KAAK,CAAEJ,SAAS,CAAG,OAAH,CAAa,OAA/F,CAAwGiB,UAAU,CAAE,iBAApH,CAA5B,uBACE,MAAC,SAAD,EAAW,QAAQ,CAAC,IAApB,CAAyB,KAAK,CAAE,CAACC,OAAO,CAAC,MAAT,CAAgBC,aAAa,CAAC,QAA9B,CAAuCH,MAAM,CAAC,OAA9C,CAAsDI,cAAc,CAAC,cAArE,CAAhC,wBACE,aAAK,KAAK,CAAE,CAACC,QAAQ,CAAC,UAAV,CAAqBC,GAAG,CAAC,CAAzB,CAA2BC,KAAK,CAAC,EAAjC,CAAoCC,UAAU,CAAC,EAA/C,CAAZ,wBACE,wBAAOxB,SAAS,CAAG,OAAH,CAAa,MAA7B,WADF,cAEE,KAAC,QAAD,EAAU,OAAO,CAAEA,SAAnB,CAA8B,QAAQ,CAAE,0BAAIC,CAAAA,YAAY,CAAC,CAACD,SAAF,CAAhB,EAAxC,EAFF,GADF,cAKE,KAAC,MAAD,EAAQ,QAAQ,CAAEF,QAAlB,CAA4B,WAAW,CAAEC,WAAzC,CAAsD,IAAI,CAAEL,IAA5D,CAAkE,OAAO,CAAEC,OAA3E,CAAoF,SAAS,CAAEK,SAA/F,EALF,CAMGJ,QAAQ,eAAK,KAAC,WAAD,EAAa,IAAI,CAAEF,IAAnB,CAAyB,QAAQ,CAAEE,QAAnC,CAA6C,QAAQ,CAAEE,QAAvD,CAAiE,SAAS,CAAEE,SAA5E,EANhB,GADF,EADF,CAaD,CAED,cAAeP,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport {useEffect, useState} from 'react';\nimport Container from '@mui/material/Container';\nimport Header from './components/Header/Header';\nimport Definitions from './components/Definitions/Definitions';\nimport { alpha, styled } from '@mui/material/styles';\nimport { grey } from '@mui/material/colors';\nimport Switch from '@mui/material/Switch';\n\nfunction App() {\n  const [word, setWord] = useState(\"\")\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightMode, setLightMode] = useState(\"false\");\n\n  const DarkMode = styled(Switch)(({ theme }) => ({\n    '& .MuiSwitch-switchBase.Mui-checked': {\n      color: grey[600],\n      '&:hover': {\n        backgroundColor: alpha(grey[600], theme.palette.action.hoverOpacity),\n      },\n    },\n    '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n      backgroundColor: grey[600],\n    },\n  }));\n  \n  const label = { inputProps: { 'aria-label': 'Switch demo' } };\n\n  const fetchDictionaryAPI = async() => {\n    try{\n      const data = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`);\n      setMeanings(data.data);\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n\n  useEffect(() => {\n    fetchDictionaryAPI();\n  }, [word,category])\n\n  return (\n    <div className=\"App\" style={{height:\"100vh\", backgroundColor: LightMode ? \"#fff\" : \"#282c34\", color: LightMode ? \"black\" : \"white\", transition: \"all 0.5s linear\"}}>\n      <Container maxWidth=\"md\" style={{display:\"flex\",flexDirection:\"column\",height:\"100vh\",justifyContent:\"space-evenly\"}}>\n        <div style={{position:\"absolute\",top:0,right:15,paddingTop:10}}>\n          <span>{LightMode ? \"Light\" : \"Dark\"} Mode</span>\n          <DarkMode checked={LightMode} onChange={()=>setLightMode(!LightMode)}/>\n        </div>\n        <Header category={category} setCategory={setCategory} word={word} setWord={setWord} LightMode={LightMode}/>\n        {meanings && (<Definitions word={word} meanings={meanings} category={category} LightMode={LightMode}/>) }\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}